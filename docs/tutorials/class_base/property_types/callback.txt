<h2>callback</h2>

Is somewhat different than other property types in that it returns a list of properties, instead of a single one. Callback property can be used to generate properties at run-time. Extremely useful, if you are dealing with for example lists or other data with variable length. For each property generated by the callback function get_property will be invoked as well.

<b>callback</b>

    name of the callback function


<b>Example 3.1. Example definition</b>


@property workbench type=callback callback=callback_gen_example
@caption Workbench


<b>Example 3.2. Example implementation</b>

#php#
function callback_gen_example($arr)
{
	$retval = array();
	$retval["el1"] = array(
		"type" => "checkbox",
		"name" => "el1",
		"caption" => "check me!",
		"value" => 1,
		"ch_value" => 1,
	);
	$retval["el2"] = array(
		"type" => "checkbox",
		"name" => "el2",
		"caption" => "no, check me!",
		"value" => 2,
		"ch_value" => 2,
	);
	return $retval;
}
#/php#

How do the callbacks work? - gotchas

First of all, if a form is shown then callbacks are processed before get_property calls.

Let's suppose you define properties t1, t2, c1, r1 where c1 is a callback which returns properties el1 and el2
now your property list looks like this:

t1, t2, el1, el2, r1 (e.g. the callback property will be replaced with it's contents). get_property WILL NOT be 
called for the callback element, but it WILL be called for el1 and el2 in the above example.

Also, if you submit that form then set_property method will be invoked for t1, t2, c1 and r1. It will not
be invoked for el1 and el2, you have to read values for those directly from the $request variable.


